#ifndef INLINE4_HARFBUZZ_H
#define INLINE4_HARFBUZZ_H

/*
** This file was machine generated by idltool.py 54.8.
** Do not edit.
**
** It provides compatibility to AmigaOS 3.x style library
** calls by substituting functions.
*/

#include <exec/types.h>
#include <exec/exec.h>
#include <exec/interfaces.h>

#include <cairo.h>
#include <freetype/freetype.h>
#include <hb.h>
#include <hb-aat.h>
#include <hb-cairo.h>
#include <hb-ft.h>
#include <hb-subset.h>
#include <hb-subset-repacker.h>

/* Inline macros for Interface "main" */
#define hb_aat_layout_get_feature_types(face, start_offset, feature_count, features) IHarfbuzz->hb_aat_layout_get_feature_types((face), (start_offset), (feature_count), (features))
#define hb_aat_layout_feature_type_get_name_id(face, feature_type) IHarfbuzz->hb_aat_layout_feature_type_get_name_id((face), (feature_type))
#define hb_aat_layout_feature_type_get_selector_infos(face, feature_type, start_offset, selector_count, selectors, default_index) IHarfbuzz->hb_aat_layout_feature_type_get_selector_infos((face), (feature_type), (start_offset), (selector_count), (selectors), (default_index))
#define hb_aat_layout_has_substitution(face) IHarfbuzz->hb_aat_layout_has_substitution((face))
#define hb_aat_layout_has_positioning(face) IHarfbuzz->hb_aat_layout_has_positioning((face))
#define hb_aat_layout_has_tracking(face) IHarfbuzz->hb_aat_layout_has_tracking((face))
#define hb_blob_create(data, length, mode, user_data, destroy) IHarfbuzz->hb_blob_create((data), (length), (mode), (user_data), (destroy))
#define hb_blob_create_or_fail(data, length, mode, user_data, destroy) IHarfbuzz->hb_blob_create_or_fail((data), (length), (mode), (user_data), (destroy))
#define hb_blob_create_from_file(file_name) IHarfbuzz->hb_blob_create_from_file((file_name))
#define hb_blob_create_from_file_or_fail(file_name) IHarfbuzz->hb_blob_create_from_file_or_fail((file_name))
#define hb_blob_create_sub_blob(parent, offset, length) IHarfbuzz->hb_blob_create_sub_blob((parent), (offset), (length))
#define hb_blob_copy_writable_or_fail(blob) IHarfbuzz->hb_blob_copy_writable_or_fail((blob))
#define hb_blob_get_empty() IHarfbuzz->hb_blob_get_empty()
#define hb_blob_reference(blob) IHarfbuzz->hb_blob_reference((blob))
#define hb_blob_destroy(blob) IHarfbuzz->hb_blob_destroy((blob))
#define hb_blob_set_user_data(blob, key, data, destroy, replace) IHarfbuzz->hb_blob_set_user_data((blob), (key), (data), (destroy), (replace))
#define hb_blob_get_user_data(blob, key) IHarfbuzz->hb_blob_get_user_data((blob), (key))
#define hb_blob_make_immutable(blob) IHarfbuzz->hb_blob_make_immutable((blob))
#define hb_blob_is_immutable(blob) IHarfbuzz->hb_blob_is_immutable((blob))
#define hb_blob_get_length(blob) IHarfbuzz->hb_blob_get_length((blob))
#define hb_blob_get_data(blob, length) IHarfbuzz->hb_blob_get_data((blob), (length))
#define hb_blob_get_data_writable(blob, length) IHarfbuzz->hb_blob_get_data_writable((blob), (length))
#define hb_glyph_info_get_glyph_flags(info) IHarfbuzz->hb_glyph_info_get_glyph_flags((info))
#define hb_segment_properties_equal(a, b) IHarfbuzz->hb_segment_properties_equal((a), (b))
#define hb_segment_properties_hash(p) IHarfbuzz->hb_segment_properties_hash((p))
#define hb_segment_properties_overlay(p, src) IHarfbuzz->hb_segment_properties_overlay((p), (src))
#define hb_buffer_create() IHarfbuzz->hb_buffer_create()
#define hb_buffer_create_similar(src) IHarfbuzz->hb_buffer_create_similar((src))
#define hb_buffer_reset(buffer) IHarfbuzz->hb_buffer_reset((buffer))
#define hb_buffer_get_empty() IHarfbuzz->hb_buffer_get_empty()
#define hb_buffer_reference(buffer) IHarfbuzz->hb_buffer_reference((buffer))
#define hb_buffer_destroy(buffer) IHarfbuzz->hb_buffer_destroy((buffer))
#define hb_buffer_set_user_data(buffer, key, data, destroy, replace) IHarfbuzz->hb_buffer_set_user_data((buffer), (key), (data), (destroy), (replace))
#define hb_buffer_get_user_data(buffer, key) IHarfbuzz->hb_buffer_get_user_data((buffer), (key))
#define hb_buffer_set_content_type(buffer, content_type) IHarfbuzz->hb_buffer_set_content_type((buffer), (content_type))
#define hb_buffer_get_content_type(buffer) IHarfbuzz->hb_buffer_get_content_type((buffer))
#define hb_buffer_set_unicode_funcs(buffer, unicode_funcs) IHarfbuzz->hb_buffer_set_unicode_funcs((buffer), (unicode_funcs))
#define hb_buffer_get_unicode_funcs(buffer) IHarfbuzz->hb_buffer_get_unicode_funcs((buffer))
#define hb_buffer_set_direction(buffer, direction) IHarfbuzz->hb_buffer_set_direction((buffer), (direction))
#define hb_buffer_get_direction(buffer) IHarfbuzz->hb_buffer_get_direction((buffer))
#define hb_buffer_set_script(buffer, script) IHarfbuzz->hb_buffer_set_script((buffer), (script))
#define hb_buffer_get_script(buffer) IHarfbuzz->hb_buffer_get_script((buffer))
#define hb_buffer_set_language(buffer, language) IHarfbuzz->hb_buffer_set_language((buffer), (language))
#define hb_buffer_get_language(buffer) IHarfbuzz->hb_buffer_get_language((buffer))
#define hb_buffer_set_segment_properties(buffer, props) IHarfbuzz->hb_buffer_set_segment_properties((buffer), (props))
#define hb_buffer_get_segment_properties(buffer, props) IHarfbuzz->hb_buffer_get_segment_properties((buffer), (props))
#define hb_buffer_guess_segment_properties(buffer) IHarfbuzz->hb_buffer_guess_segment_properties((buffer))
#define hb_buffer_set_flags(buffer, flags) IHarfbuzz->hb_buffer_set_flags((buffer), (flags))
#define hb_buffer_get_flags(buffer) IHarfbuzz->hb_buffer_get_flags((buffer))
#define hb_buffer_set_cluster_level(buffer, cluster_level) IHarfbuzz->hb_buffer_set_cluster_level((buffer), (cluster_level))
#define hb_buffer_get_cluster_level(buffer) IHarfbuzz->hb_buffer_get_cluster_level((buffer))
#define hb_buffer_set_replacement_codepoint(buffer, replacement) IHarfbuzz->hb_buffer_set_replacement_codepoint((buffer), (replacement))
#define hb_buffer_get_replacement_codepoint(buffer) IHarfbuzz->hb_buffer_get_replacement_codepoint((buffer))
#define hb_buffer_set_invisible_glyph(buffer, invisible) IHarfbuzz->hb_buffer_set_invisible_glyph((buffer), (invisible))
#define hb_buffer_get_invisible_glyph(buffer) IHarfbuzz->hb_buffer_get_invisible_glyph((buffer))
#define hb_buffer_set_not_found_glyph(buffer, not_found) IHarfbuzz->hb_buffer_set_not_found_glyph((buffer), (not_found))
#define hb_buffer_get_not_found_glyph(buffer) IHarfbuzz->hb_buffer_get_not_found_glyph((buffer))
#define hb_buffer_set_random_state(buffer, state) IHarfbuzz->hb_buffer_set_random_state((buffer), (state))
#define hb_buffer_get_random_state(buffer) IHarfbuzz->hb_buffer_get_random_state((buffer))
#define hb_buffer_clear_contents(buffer) IHarfbuzz->hb_buffer_clear_contents((buffer))
#define hb_buffer_pre_allocate(buffer, size) IHarfbuzz->hb_buffer_pre_allocate((buffer), (size))
#define hb_buffer_allocation_successful(buffer) IHarfbuzz->hb_buffer_allocation_successful((buffer))
#define hb_buffer_reverse(buffer) IHarfbuzz->hb_buffer_reverse((buffer))
#define hb_buffer_reverse_range(buffer, start, end) IHarfbuzz->hb_buffer_reverse_range((buffer), (start), (end))
#define hb_buffer_reverse_clusters(buffer) IHarfbuzz->hb_buffer_reverse_clusters((buffer))
#define hb_buffer_add(buffer, codepoint, cluster) IHarfbuzz->hb_buffer_add((buffer), (codepoint), (cluster))
#define hb_buffer_add_utf8(buffer, text, text_length, item_offset, item_length) IHarfbuzz->hb_buffer_add_utf8((buffer), (text), (text_length), (item_offset), (item_length))
#define hb_buffer_add_utf16(buffer, text, text_length, item_offset, item_length) IHarfbuzz->hb_buffer_add_utf16((buffer), (text), (text_length), (item_offset), (item_length))
#define hb_buffer_add_utf32(buffer, text, text_length, item_offset, item_length) IHarfbuzz->hb_buffer_add_utf32((buffer), (text), (text_length), (item_offset), (item_length))
#define hb_buffer_add_latin1(buffer, text, text_length, item_offset, item_length) IHarfbuzz->hb_buffer_add_latin1((buffer), (text), (text_length), (item_offset), (item_length))
#define hb_buffer_add_codepoints(buffer, text, text_length, item_offset, item_length) IHarfbuzz->hb_buffer_add_codepoints((buffer), (text), (text_length), (item_offset), (item_length))
#define hb_buffer_append(buffer, source, start, end) IHarfbuzz->hb_buffer_append((buffer), (source), (start), (end))
#define hb_buffer_set_length(buffer, length) IHarfbuzz->hb_buffer_set_length((buffer), (length))
#define hb_buffer_get_length(buffer) IHarfbuzz->hb_buffer_get_length((buffer))
#define hb_buffer_get_glyph_infos(buffer, length) IHarfbuzz->hb_buffer_get_glyph_infos((buffer), (length))
#define hb_buffer_get_glyph_positions(buffer, length) IHarfbuzz->hb_buffer_get_glyph_positions((buffer), (length))
#define hb_buffer_has_positions(buffer) IHarfbuzz->hb_buffer_has_positions((buffer))
#define hb_buffer_normalize_glyphs(buffer) IHarfbuzz->hb_buffer_normalize_glyphs((buffer))
#define hb_buffer_serialize_format_from_string(str, len) IHarfbuzz->hb_buffer_serialize_format_from_string((str), (len))
#define hb_buffer_serialize_format_to_string(format) IHarfbuzz->hb_buffer_serialize_format_to_string((format))
#define hb_buffer_serialize_list_formats() IHarfbuzz->hb_buffer_serialize_list_formats()
#define hb_buffer_serialize_glyphs(buffer, start, end, buf, buf_size, buf_consumed, font, format, flags) IHarfbuzz->hb_buffer_serialize_glyphs((buffer), (start), (end), (buf), (buf_size), (buf_consumed), (font), (format), (flags))
#define hb_buffer_serialize_unicode(buffer, start, end, buf, buf_size, buf_consumed, format, flags) IHarfbuzz->hb_buffer_serialize_unicode((buffer), (start), (end), (buf), (buf_size), (buf_consumed), (format), (flags))
#define hb_buffer_serialize(buffer, start, end, buf, buf_size, buf_consumed, font, format, flags) IHarfbuzz->hb_buffer_serialize((buffer), (start), (end), (buf), (buf_size), (buf_consumed), (font), (format), (flags))
#define hb_buffer_deserialize_glyphs(buffer, buf, buf_len, *end_ptr, font, format) IHarfbuzz->hb_buffer_deserialize_glyphs((buffer), (buf), (buf_len), (*end_ptr), (font), (format))
#define hb_buffer_deserialize_unicode(buffer, buf, buf_len, *end_ptr, format) IHarfbuzz->hb_buffer_deserialize_unicode((buffer), (buf), (buf_len), (*end_ptr), (format))
#define hb_buffer_diff(buffer, reference, dottedcircle_glyph, position_fuzz) IHarfbuzz->hb_buffer_diff((buffer), (reference), (dottedcircle_glyph), (position_fuzz))
#define hb_buffer_set_message_func(buffer, func, user_data, destroy) IHarfbuzz->hb_buffer_set_message_func((buffer), (func), (user_data), (destroy))
#define hb_cairo_font_face_create_for_font(font) IHarfbuzz->hb_cairo_font_face_create_for_font((font))
#define hb_cairo_font_face_get_font(font_face) IHarfbuzz->hb_cairo_font_face_get_font((font_face))
#define hb_cairo_font_face_create_for_face(face) IHarfbuzz->hb_cairo_font_face_create_for_face((face))
#define hb_cairo_font_face_get_face(font_face) IHarfbuzz->hb_cairo_font_face_get_face((font_face))
#define hb_cairo_font_face_set_font_init_func(font_face, func, user_data, destroy) IHarfbuzz->hb_cairo_font_face_set_font_init_func((font_face), (func), (user_data), (destroy))
#define hb_cairo_scaled_font_get_font(scaled_font) IHarfbuzz->hb_cairo_scaled_font_get_font((scaled_font))
#define hb_cairo_font_face_set_scale_factor(font_face, scale_factor) IHarfbuzz->hb_cairo_font_face_set_scale_factor((font_face), (scale_factor))
#define hb_cairo_font_face_get_scale_factor(font_face) IHarfbuzz->hb_cairo_font_face_get_scale_factor((font_face))
#define hb_cairo_glyphs_from_buffer(buffer, utf8_clusters, x_scale_factor, y_scale_factor, x, y, utf8, utf8_len, *glyphs, num_glyphs, *clusters, num_clusters, cluster_flags) IHarfbuzz->hb_cairo_glyphs_from_buffer((buffer), (utf8_clusters), (x_scale_factor), (y_scale_factor), (x), (y), (utf8), (utf8_len), (*glyphs), (num_glyphs), (*clusters), (num_clusters), (cluster_flags))
#define hb_tag_from_string(str, len) IHarfbuzz->hb_tag_from_string((str), (len))
#define hb_tag_to_string(tag, buf) IHarfbuzz->hb_tag_to_string((tag), (buf))
#define hb_direction_from_string(str, len) IHarfbuzz->hb_direction_from_string((str), (len))
#define hb_direction_to_string(direction) IHarfbuzz->hb_direction_to_string((direction))
#define hb_language_from_string(str, len) IHarfbuzz->hb_language_from_string((str), (len))
#define hb_language_to_string(language) IHarfbuzz->hb_language_to_string((language))
#define hb_language_get_default() IHarfbuzz->hb_language_get_default()
#define hb_language_matches(language, specific) IHarfbuzz->hb_language_matches((language), (specific))
#define hb_script_from_iso15924_tag(tag) IHarfbuzz->hb_script_from_iso15924_tag((tag))
#define hb_script_from_string(str, len) IHarfbuzz->hb_script_from_string((str), (len))
#define hb_script_to_iso15924_tag(script) IHarfbuzz->hb_script_to_iso15924_tag((script))
#define hb_script_get_horizontal_direction(script) IHarfbuzz->hb_script_get_horizontal_direction((script))
#define hb_feature_from_string(str, len, feature) IHarfbuzz->hb_feature_from_string((str), (len), (feature))
#define hb_feature_to_string(feature, buf, size) IHarfbuzz->hb_feature_to_string((feature), (buf), (size))
#define hb_variation_from_string(str, len, variation) IHarfbuzz->hb_variation_from_string((str), (len), (variation))
#define hb_variation_to_string(variation, buf, size) IHarfbuzz->hb_variation_to_string((variation), (buf), (size))
#define hb_color_get_alpha(color) IHarfbuzz->hb_color_get_alpha((color))
#define hb_color_get_red(color) IHarfbuzz->hb_color_get_red((color))
#define hb_color_get_green(color) IHarfbuzz->hb_color_get_green((color))
#define hb_color_get_blue(color) IHarfbuzz->hb_color_get_blue((color))
#define hb_font_funcs_set_glyph_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_func((ffuncs), (func), (user_data), (destroy))
#define hb_unicode_funcs_set_eastasian_width_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_eastasian_width_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_eastasian_width(ufuncs, unicode) IHarfbuzz->hb_unicode_eastasian_width((ufuncs), (unicode))
#define hb_unicode_funcs_set_decompose_compatibility_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_decompose_compatibility_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_decompose_compatibility(ufuncs, u, decomposed) IHarfbuzz->hb_unicode_decompose_compatibility((ufuncs), (u), (decomposed))
#define hb_font_funcs_set_glyph_v_kerning_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_v_kerning_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_get_glyph_v_kerning(font, top_glyph, bottom_glyph) IHarfbuzz->hb_font_get_glyph_v_kerning((font), (top_glyph), (bottom_glyph))
#define hb_font_funcs_set_glyph_shape_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_shape_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_get_glyph_shape(font, glyph, dfuncs, draw_data) IHarfbuzz->hb_font_get_glyph_shape((font), (glyph), (dfuncs), (draw_data))
#define hb_draw_funcs_set_move_to_func(dfuncs, func, user_data, destroy) IHarfbuzz->hb_draw_funcs_set_move_to_func((dfuncs), (func), (user_data), (destroy))
#define hb_draw_funcs_set_line_to_func(dfuncs, func, user_data, destroy) IHarfbuzz->hb_draw_funcs_set_line_to_func((dfuncs), (func), (user_data), (destroy))
#define hb_draw_funcs_set_quadratic_to_func(dfuncs, func, user_data, destroy) IHarfbuzz->hb_draw_funcs_set_quadratic_to_func((dfuncs), (func), (user_data), (destroy))
#define hb_draw_funcs_set_cubic_to_func(dfuncs, func, user_data, destroy) IHarfbuzz->hb_draw_funcs_set_cubic_to_func((dfuncs), (func), (user_data), (destroy))
#define hb_draw_funcs_set_close_path_func(dfuncs, func, user_data, destroy) IHarfbuzz->hb_draw_funcs_set_close_path_func((dfuncs), (func), (user_data), (destroy))
#define hb_draw_funcs_create() IHarfbuzz->hb_draw_funcs_create()
#define hb_draw_funcs_get_empty() IHarfbuzz->hb_draw_funcs_get_empty()
#define hb_draw_funcs_reference(dfuncs) IHarfbuzz->hb_draw_funcs_reference((dfuncs))
#define hb_draw_funcs_destroy(dfuncs) IHarfbuzz->hb_draw_funcs_destroy((dfuncs))
#define hb_draw_funcs_set_user_data(dfuncs, key, data, destroy, replace) IHarfbuzz->hb_draw_funcs_set_user_data((dfuncs), (key), (data), (destroy), (replace))
#define hb_draw_funcs_get_user_data(dfuncs, key) IHarfbuzz->hb_draw_funcs_get_user_data((dfuncs), (key))
#define hb_draw_funcs_make_immutable(dfuncs) IHarfbuzz->hb_draw_funcs_make_immutable((dfuncs))
#define hb_draw_funcs_is_immutable(dfuncs) IHarfbuzz->hb_draw_funcs_is_immutable((dfuncs))
#define hb_draw_move_to(dfuncs, draw_data, st, to_x, to_y) IHarfbuzz->hb_draw_move_to((dfuncs), (draw_data), (st), (to_x), (to_y))
#define hb_draw_line_to(dfuncs, draw_data, st, to_x, to_y) IHarfbuzz->hb_draw_line_to((dfuncs), (draw_data), (st), (to_x), (to_y))
#define hb_draw_quadratic_to(dfuncs, draw_data, st, control_x, control_y, to_x, to_y) IHarfbuzz->hb_draw_quadratic_to((dfuncs), (draw_data), (st), (control_x), (control_y), (to_x), (to_y))
#define hb_draw_cubic_to(dfuncs, draw_data, st, control1_x, control1_y, control2_x, control2_y, to_x, to_y) IHarfbuzz->hb_draw_cubic_to((dfuncs), (draw_data), (st), (control1_x), (control1_y), (control2_x), (control2_y), (to_x), (to_y))
#define hb_draw_close_path(dfuncs, draw_data, st) IHarfbuzz->hb_draw_close_path((dfuncs), (draw_data), (st))
#define hb_face_count(blob) IHarfbuzz->hb_face_count((blob))
#define hb_face_create(blob, index) IHarfbuzz->hb_face_create((blob), (index))
#define hb_face_create_for_tables(reference_table_func, user_data, destroy) IHarfbuzz->hb_face_create_for_tables((reference_table_func), (user_data), (destroy))
#define hb_face_get_empty() IHarfbuzz->hb_face_get_empty()
#define hb_face_reference(face) IHarfbuzz->hb_face_reference((face))
#define hb_face_destroy(face) IHarfbuzz->hb_face_destroy((face))
#define hb_face_set_user_data(face, key, data, destroy, replace) IHarfbuzz->hb_face_set_user_data((face), (key), (data), (destroy), (replace))
#define hb_face_get_user_data(face, key) IHarfbuzz->hb_face_get_user_data((face), (key))
#define hb_face_make_immutable(face) IHarfbuzz->hb_face_make_immutable((face))
#define hb_face_is_immutable(face) IHarfbuzz->hb_face_is_immutable((face))
#define hb_face_reference_table(face, tag) IHarfbuzz->hb_face_reference_table((face), (tag))
#define hb_face_reference_blob(face) IHarfbuzz->hb_face_reference_blob((face))
#define hb_face_set_index(face, index) IHarfbuzz->hb_face_set_index((face), (index))
#define hb_face_get_index(face) IHarfbuzz->hb_face_get_index((face))
#define hb_face_set_upem(face, upem) IHarfbuzz->hb_face_set_upem((face), (upem))
#define hb_face_get_upem(face) IHarfbuzz->hb_face_get_upem((face))
#define hb_face_set_glyph_count(face, glyph_count) IHarfbuzz->hb_face_set_glyph_count((face), (glyph_count))
#define hb_face_get_glyph_count(face) IHarfbuzz->hb_face_get_glyph_count((face))
#define hb_face_get_table_tags(face, start_offset, table_count, table_tags) IHarfbuzz->hb_face_get_table_tags((face), (start_offset), (table_count), (table_tags))
#define hb_face_collect_unicodes(face, out) IHarfbuzz->hb_face_collect_unicodes((face), (out))
#define hb_face_collect_nominal_glyph_mapping(face, mapping, unicodes) IHarfbuzz->hb_face_collect_nominal_glyph_mapping((face), (mapping), (unicodes))
#define hb_face_collect_variation_selectors(face, out) IHarfbuzz->hb_face_collect_variation_selectors((face), (out))
#define hb_face_collect_variation_unicodes(face, variation_selector, out) IHarfbuzz->hb_face_collect_variation_unicodes((face), (variation_selector), (out))
#define hb_face_builder_create() IHarfbuzz->hb_face_builder_create()
#define hb_face_builder_add_table(face, tag, blob) IHarfbuzz->hb_face_builder_add_table((face), (tag), (blob))
#define hb_face_builder_sort_tables(face, tags) IHarfbuzz->hb_face_builder_sort_tables((face), (tags))
#define hb_font_funcs_create() IHarfbuzz->hb_font_funcs_create()
#define hb_font_funcs_get_empty() IHarfbuzz->hb_font_funcs_get_empty()
#define hb_font_funcs_reference(ffuncs) IHarfbuzz->hb_font_funcs_reference((ffuncs))
#define hb_font_funcs_destroy(ffuncs) IHarfbuzz->hb_font_funcs_destroy((ffuncs))
#define hb_font_funcs_set_user_data(ffuncs, key, data, destroy, replace) IHarfbuzz->hb_font_funcs_set_user_data((ffuncs), (key), (data), (destroy), (replace))
#define hb_font_funcs_get_user_data(ffuncs, key) IHarfbuzz->hb_font_funcs_get_user_data((ffuncs), (key))
#define hb_font_funcs_make_immutable(ffuncs) IHarfbuzz->hb_font_funcs_make_immutable((ffuncs))
#define hb_font_funcs_is_immutable(ffuncs) IHarfbuzz->hb_font_funcs_is_immutable((ffuncs))
#define hb_font_funcs_set_font_h_extents_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_font_h_extents_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_font_v_extents_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_font_v_extents_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_nominal_glyph_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_nominal_glyph_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_nominal_glyphs_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_nominal_glyphs_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_variation_glyph_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_variation_glyph_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_h_advance_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_h_advance_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_v_advance_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_v_advance_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_h_advances_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_h_advances_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_v_advances_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_v_advances_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_h_origin_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_h_origin_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_v_origin_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_v_origin_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_h_kerning_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_h_kerning_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_extents_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_extents_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_contour_point_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_contour_point_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_name_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_name_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_glyph_from_name_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_glyph_from_name_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_draw_glyph_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_draw_glyph_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_funcs_set_paint_glyph_func(ffuncs, func, user_data, destroy) IHarfbuzz->hb_font_funcs_set_paint_glyph_func((ffuncs), (func), (user_data), (destroy))
#define hb_font_get_h_extents(font, extents) IHarfbuzz->hb_font_get_h_extents((font), (extents))
#define hb_font_get_v_extents(font, extents) IHarfbuzz->hb_font_get_v_extents((font), (extents))
#define hb_font_get_nominal_glyph(font, unicode, glyph) IHarfbuzz->hb_font_get_nominal_glyph((font), (unicode), (glyph))
#define hb_font_get_variation_glyph(font, unicode, variation_selector, glyph) IHarfbuzz->hb_font_get_variation_glyph((font), (unicode), (variation_selector), (glyph))
#define hb_font_get_nominal_glyphs(font, count, first_unicode, unicode_stride, first_glyph, glyph_stride) IHarfbuzz->hb_font_get_nominal_glyphs((font), (count), (first_unicode), (unicode_stride), (first_glyph), (glyph_stride))
#define hb_font_get_glyph_h_advance(font, glyph) IHarfbuzz->hb_font_get_glyph_h_advance((font), (glyph))
#define hb_font_get_glyph_v_advance(font, glyph) IHarfbuzz->hb_font_get_glyph_v_advance((font), (glyph))
#define hb_font_get_glyph_h_advances(font, count, first_glyph, glyph_stride, first_advance, advance_stride) IHarfbuzz->hb_font_get_glyph_h_advances((font), (count), (first_glyph), (glyph_stride), (first_advance), (advance_stride))
#define hb_font_get_glyph_v_advances(font, count, first_glyph, glyph_stride, first_advance, advance_stride) IHarfbuzz->hb_font_get_glyph_v_advances((font), (count), (first_glyph), (glyph_stride), (first_advance), (advance_stride))
#define hb_font_get_glyph_h_origin(font, glyph, x, y) IHarfbuzz->hb_font_get_glyph_h_origin((font), (glyph), (x), (y))
#define hb_font_get_glyph_v_origin(font, glyph, x, y) IHarfbuzz->hb_font_get_glyph_v_origin((font), (glyph), (x), (y))
#define hb_font_get_glyph_h_kerning(font, left_glyph, right_glyph) IHarfbuzz->hb_font_get_glyph_h_kerning((font), (left_glyph), (right_glyph))
#define hb_font_get_glyph_extents(font, glyph, extents) IHarfbuzz->hb_font_get_glyph_extents((font), (glyph), (extents))
#define hb_font_get_glyph_contour_point(font, glyph, point_index, x, y) IHarfbuzz->hb_font_get_glyph_contour_point((font), (glyph), (point_index), (x), (y))
#define hb_font_get_glyph_name(font, glyph, name, size) IHarfbuzz->hb_font_get_glyph_name((font), (glyph), (name), (size))
#define hb_font_get_glyph_from_name(font, name, len, glyph) IHarfbuzz->hb_font_get_glyph_from_name((font), (name), (len), (glyph))
#define hb_font_draw_glyph(font, glyph, dfuncs, draw_data) IHarfbuzz->hb_font_draw_glyph((font), (glyph), (dfuncs), (draw_data))
#define hb_font_paint_glyph(font, glyph, pfuncs, paint_data, palette_index, foreground) IHarfbuzz->hb_font_paint_glyph((font), (glyph), (pfuncs), (paint_data), (palette_index), (foreground))
#define hb_font_get_glyph(font, unicode, variation_selector, glyph) IHarfbuzz->hb_font_get_glyph((font), (unicode), (variation_selector), (glyph))
#define hb_font_get_extents_for_direction(font, direction, extents) IHarfbuzz->hb_font_get_extents_for_direction((font), (direction), (extents))
#define hb_font_get_glyph_advance_for_direction(font, glyph, direction, x, y) IHarfbuzz->hb_font_get_glyph_advance_for_direction((font), (glyph), (direction), (x), (y))
#define hb_font_get_glyph_advances_for_direction(font, direction, count, first_glyph, glyph_stride, first_advance, advance_stride) IHarfbuzz->hb_font_get_glyph_advances_for_direction((font), (direction), (count), (first_glyph), (glyph_stride), (first_advance), (advance_stride))
#define hb_font_get_glyph_origin_for_direction(font, glyph, direction, x, y) IHarfbuzz->hb_font_get_glyph_origin_for_direction((font), (glyph), (direction), (x), (y))
#define hb_font_add_glyph_origin_for_direction(font, glyph, direction, x, y) IHarfbuzz->hb_font_add_glyph_origin_for_direction((font), (glyph), (direction), (x), (y))
#define hb_font_subtract_glyph_origin_for_direction(font, glyph, direction, x, y) IHarfbuzz->hb_font_subtract_glyph_origin_for_direction((font), (glyph), (direction), (x), (y))
#define hb_font_get_glyph_kerning_for_direction(font, first_glyph, second_glyph, direction, x, y) IHarfbuzz->hb_font_get_glyph_kerning_for_direction((font), (first_glyph), (second_glyph), (direction), (x), (y))
#define hb_font_get_glyph_extents_for_origin(font, glyph, direction, extents) IHarfbuzz->hb_font_get_glyph_extents_for_origin((font), (glyph), (direction), (extents))
#define hb_font_get_glyph_contour_point_for_origin(font, glyph, point_index, direction, x, y) IHarfbuzz->hb_font_get_glyph_contour_point_for_origin((font), (glyph), (point_index), (direction), (x), (y))
#define hb_font_glyph_to_string(font, glyph, s, size) IHarfbuzz->hb_font_glyph_to_string((font), (glyph), (s), (size))
#define hb_font_glyph_from_string(font, s, len, glyph) IHarfbuzz->hb_font_glyph_from_string((font), (s), (len), (glyph))
#define hb_font_create(face) IHarfbuzz->hb_font_create((face))
#define hb_font_create_sub_font(parent) IHarfbuzz->hb_font_create_sub_font((parent))
#define hb_font_get_empty() IHarfbuzz->hb_font_get_empty()
#define hb_font_reference(font) IHarfbuzz->hb_font_reference((font))
#define hb_font_destroy(font) IHarfbuzz->hb_font_destroy((font))
#define hb_font_set_user_data(font, key, data, destroy, replace) IHarfbuzz->hb_font_set_user_data((font), (key), (data), (destroy), (replace))
#define hb_font_get_user_data(font, key) IHarfbuzz->hb_font_get_user_data((font), (key))
#define hb_font_make_immutable(font) IHarfbuzz->hb_font_make_immutable((font))
#define hb_font_is_immutable(font) IHarfbuzz->hb_font_is_immutable((font))
#define hb_font_get_serial(font) IHarfbuzz->hb_font_get_serial((font))
#define hb_font_changed(font) IHarfbuzz->hb_font_changed((font))
#define hb_font_set_parent(font, parent) IHarfbuzz->hb_font_set_parent((font), (parent))
#define hb_font_get_parent(font) IHarfbuzz->hb_font_get_parent((font))
#define hb_font_set_face(font, face) IHarfbuzz->hb_font_set_face((font), (face))
#define hb_font_get_face(font) IHarfbuzz->hb_font_get_face((font))
#define hb_font_set_funcs(font, klass, font_data, destroy) IHarfbuzz->hb_font_set_funcs((font), (klass), (font_data), (destroy))
#define hb_font_set_funcs_data(font, font_data, destroy) IHarfbuzz->hb_font_set_funcs_data((font), (font_data), (destroy))
#define hb_font_set_scale(font, x_scale, y_scale) IHarfbuzz->hb_font_set_scale((font), (x_scale), (y_scale))
#define hb_font_get_scale(font, x_scale, y_scale) IHarfbuzz->hb_font_get_scale((font), (x_scale), (y_scale))
#define hb_font_set_ppem(font, x_ppem, y_ppem) IHarfbuzz->hb_font_set_ppem((font), (x_ppem), (y_ppem))
#define hb_font_get_ppem(font, x_ppem, y_ppem) IHarfbuzz->hb_font_get_ppem((font), (x_ppem), (y_ppem))
#define hb_font_set_ptem(font, ptem) IHarfbuzz->hb_font_set_ptem((font), (ptem))
#define hb_font_get_ptem(font) IHarfbuzz->hb_font_get_ptem((font))
#define hb_font_set_synthetic_bold(font, x_embolden, y_embolden, in_place) IHarfbuzz->hb_font_set_synthetic_bold((font), (x_embolden), (y_embolden), (in_place))
#define hb_font_get_synthetic_bold(font, x_embolden, y_embolden, in_place) IHarfbuzz->hb_font_get_synthetic_bold((font), (x_embolden), (y_embolden), (in_place))
#define hb_font_set_synthetic_slant(font, slant) IHarfbuzz->hb_font_set_synthetic_slant((font), (slant))
#define hb_font_get_synthetic_slant(font) IHarfbuzz->hb_font_get_synthetic_slant((font))
#define hb_font_set_variations(font, variations, variations_length) IHarfbuzz->hb_font_set_variations((font), (variations), (variations_length))
#define hb_font_set_variation(font, tag, value) IHarfbuzz->hb_font_set_variation((font), (tag), (value))
#define hb_font_set_var_coords_design(font, coords, coords_length) IHarfbuzz->hb_font_set_var_coords_design((font), (coords), (coords_length))
#define hb_font_get_var_coords_design(font, length) IHarfbuzz->hb_font_get_var_coords_design((font), (length))
#define hb_font_set_var_coords_normalized(font, coords, coords_length) IHarfbuzz->hb_font_set_var_coords_normalized((font), (coords), (coords_length))
#define hb_font_get_var_coords_normalized(font, length) IHarfbuzz->hb_font_get_var_coords_normalized((font), (length))
#define hb_font_set_var_named_instance(font, instance_index) IHarfbuzz->hb_font_set_var_named_instance((font), (instance_index))
#define hb_font_get_var_named_instance(font) IHarfbuzz->hb_font_get_var_named_instance((font))
#define hb_ft_face_create(ft_face, destroy) IHarfbuzz->hb_ft_face_create((ft_face), (destroy))
#define hb_ft_face_create_cached(ft_face) IHarfbuzz->hb_ft_face_create_cached((ft_face))
#define hb_ft_face_create_referenced(ft_face) IHarfbuzz->hb_ft_face_create_referenced((ft_face))
#define hb_ft_font_create(ft_face, destroy) IHarfbuzz->hb_ft_font_create((ft_face), (destroy))
#define hb_ft_font_create_referenced(ft_face) IHarfbuzz->hb_ft_font_create_referenced((ft_face))
#define hb_ft_font_get_face(font) IHarfbuzz->hb_ft_font_get_face((font))
#define hb_ft_font_lock_face(font) IHarfbuzz->hb_ft_font_lock_face((font))
#define hb_ft_font_unlock_face(font) IHarfbuzz->hb_ft_font_unlock_face((font))
#define hb_ft_font_set_load_flags(font, load_flags) IHarfbuzz->hb_ft_font_set_load_flags((font), (load_flags))
#define hb_ft_font_get_load_flags(font) IHarfbuzz->hb_ft_font_get_load_flags((font))
#define hb_ft_font_changed(font) IHarfbuzz->hb_ft_font_changed((font))
#define hb_ft_hb_font_changed(font) IHarfbuzz->hb_ft_hb_font_changed((font))
#define hb_ft_font_set_funcs(font) IHarfbuzz->hb_ft_font_set_funcs((font))
#define hb_map_create() IHarfbuzz->hb_map_create()
#define hb_map_get_empty() IHarfbuzz->hb_map_get_empty()
#define hb_map_reference(map) IHarfbuzz->hb_map_reference((map))
#define hb_map_destroy(map) IHarfbuzz->hb_map_destroy((map))
#define hb_map_set_user_data(map, key, data, destroy, replace) IHarfbuzz->hb_map_set_user_data((map), (key), (data), (destroy), (replace))
#define hb_map_get_user_data(map, key) IHarfbuzz->hb_map_get_user_data((map), (key))
#define hb_map_allocation_successful(map) IHarfbuzz->hb_map_allocation_successful((map))
#define hb_map_copy(map) IHarfbuzz->hb_map_copy((map))
#define hb_map_clear(map) IHarfbuzz->hb_map_clear((map))
#define hb_map_is_empty(map) IHarfbuzz->hb_map_is_empty((map))
#define hb_map_get_population(map) IHarfbuzz->hb_map_get_population((map))
#define hb_map_is_equal(map, other) IHarfbuzz->hb_map_is_equal((map), (other))
#define hb_map_hash(map) IHarfbuzz->hb_map_hash((map))
#define hb_map_set(map, key, value) IHarfbuzz->hb_map_set((map), (key), (value))
#define hb_map_get(map, key) IHarfbuzz->hb_map_get((map), (key))
#define hb_map_del(map, key) IHarfbuzz->hb_map_del((map), (key))
#define hb_map_has(map, key) IHarfbuzz->hb_map_has((map), (key))
#define hb_map_update(map, other) IHarfbuzz->hb_map_update((map), (other))
#define hb_map_next(map, idx, key, value) IHarfbuzz->hb_map_next((map), (idx), (key), (value))
#define hb_map_keys(map, keys) IHarfbuzz->hb_map_keys((map), (keys))
#define hb_map_values(map, values) IHarfbuzz->hb_map_values((map), (values))
#define hb_ot_color_has_palettes(face) IHarfbuzz->hb_ot_color_has_palettes((face))
#define hb_ot_color_palette_get_count(face) IHarfbuzz->hb_ot_color_palette_get_count((face))
#define hb_ot_color_palette_get_name_id(face, palette_index) IHarfbuzz->hb_ot_color_palette_get_name_id((face), (palette_index))
#define hb_ot_color_palette_color_get_name_id(face, color_index) IHarfbuzz->hb_ot_color_palette_color_get_name_id((face), (color_index))
#define hb_ot_color_palette_get_flags(face, palette_index) IHarfbuzz->hb_ot_color_palette_get_flags((face), (palette_index))
#define hb_ot_color_palette_get_colors(face, palette_index, start_offset, color_count, colors) IHarfbuzz->hb_ot_color_palette_get_colors((face), (palette_index), (start_offset), (color_count), (colors))
#define hb_ot_color_has_layers(face) IHarfbuzz->hb_ot_color_has_layers((face))
#define hb_ot_color_glyph_get_layers(face, glyph, start_offset, layer_count, layers) IHarfbuzz->hb_ot_color_glyph_get_layers((face), (glyph), (start_offset), (layer_count), (layers))
#define hb_ot_color_has_paint(face) IHarfbuzz->hb_ot_color_has_paint((face))
#define hb_ot_color_glyph_has_paint(face, glyph) IHarfbuzz->hb_ot_color_glyph_has_paint((face), (glyph))
#define hb_ot_color_has_svg(face) IHarfbuzz->hb_ot_color_has_svg((face))
#define hb_ot_color_glyph_reference_svg(face, glyph) IHarfbuzz->hb_ot_color_glyph_reference_svg((face), (glyph))
#define hb_ot_color_has_png(face) IHarfbuzz->hb_ot_color_has_png((face))
#define hb_ot_color_glyph_reference_png(font, glyph) IHarfbuzz->hb_ot_color_glyph_reference_png((font), (glyph))
#define hb_ot_layout_table_choose_script(face, table_tag, script_tags, script_index, chosen_script) IHarfbuzz->hb_ot_layout_table_choose_script((face), (table_tag), (script_tags), (script_index), (chosen_script))
#define hb_ot_layout_script_find_language(face, table_tag, script_index, language_tag, language_index) IHarfbuzz->hb_ot_layout_script_find_language((face), (table_tag), (script_index), (language_tag), (language_index))
#define hb_ot_tags_from_script(script, script_tag_1, script_tag_2) IHarfbuzz->hb_ot_tags_from_script((script), (script_tag_1), (script_tag_2))
#define hb_ot_tag_from_language(language) IHarfbuzz->hb_ot_tag_from_language((language))
#define hb_ot_var_get_axes(face, start_offset, axes_count, axes_array) IHarfbuzz->hb_ot_var_get_axes((face), (start_offset), (axes_count), (axes_array))
#define hb_ot_var_find_axis(face, axis_tag, axis_index, axis_info) IHarfbuzz->hb_ot_var_find_axis((face), (axis_tag), (axis_index), (axis_info))
#define hb_ot_font_set_funcs(font) IHarfbuzz->hb_ot_font_set_funcs((font))
#define hb_ot_tags_from_script_and_language(script, language, script_count, script_tags, language_count, language_tags) IHarfbuzz->hb_ot_tags_from_script_and_language((script), (language), (script_count), (script_tags), (language_count), (language_tags))
#define hb_ot_tag_to_script(tag) IHarfbuzz->hb_ot_tag_to_script((tag))
#define hb_ot_tag_to_language(tag) IHarfbuzz->hb_ot_tag_to_language((tag))
#define hb_ot_tags_to_script_and_language(script_tag, language_tag, script, language) IHarfbuzz->hb_ot_tags_to_script_and_language((script_tag), (language_tag), (script), (language))
#define hb_ot_layout_has_glyph_classes(face) IHarfbuzz->hb_ot_layout_has_glyph_classes((face))
#define hb_ot_layout_get_glyph_class(face, glyph) IHarfbuzz->hb_ot_layout_get_glyph_class((face), (glyph))
#define hb_ot_layout_get_glyphs_in_class(face, klass, glyphs) IHarfbuzz->hb_ot_layout_get_glyphs_in_class((face), (klass), (glyphs))
#define hb_ot_layout_get_attach_points(face, glyph, start_offset, point_count, point_array) IHarfbuzz->hb_ot_layout_get_attach_points((face), (glyph), (start_offset), (point_count), (point_array))
#define hb_ot_layout_get_ligature_carets(font, direction, glyph, start_offset, caret_count, caret_array) IHarfbuzz->hb_ot_layout_get_ligature_carets((font), (direction), (glyph), (start_offset), (caret_count), (caret_array))
#define hb_ot_layout_table_get_script_tags(face, table_tag, start_offset, script_count, script_tags) IHarfbuzz->hb_ot_layout_table_get_script_tags((face), (table_tag), (start_offset), (script_count), (script_tags))
#define hb_ot_layout_table_find_script(face, table_tag, script_tag, script_index) IHarfbuzz->hb_ot_layout_table_find_script((face), (table_tag), (script_tag), (script_index))
#define hb_ot_layout_table_select_script(face, table_tag, script_count, script_tags, script_index, chosen_script) IHarfbuzz->hb_ot_layout_table_select_script((face), (table_tag), (script_count), (script_tags), (script_index), (chosen_script))
#define hb_ot_layout_table_get_feature_tags(face, table_tag, start_offset, feature_count, feature_tags) IHarfbuzz->hb_ot_layout_table_get_feature_tags((face), (table_tag), (start_offset), (feature_count), (feature_tags))
#define hb_ot_layout_script_get_language_tags(face, table_tag, script_index, start_offset, language_count, language_tags) IHarfbuzz->hb_ot_layout_script_get_language_tags((face), (table_tag), (script_index), (start_offset), (language_count), (language_tags))
#define hb_ot_layout_script_select_language(face, table_tag, script_index, language_count, language_tags, language_index) IHarfbuzz->hb_ot_layout_script_select_language((face), (table_tag), (script_index), (language_count), (language_tags), (language_index))
#define hb_ot_layout_script_select_language2(face, table_tag, script_index, language_count, language_tags, language_index, chosen_language) IHarfbuzz->hb_ot_layout_script_select_language2((face), (table_tag), (script_index), (language_count), (language_tags), (language_index), (chosen_language))
#define hb_ot_layout_language_get_required_feature_index(face, table_tag, script_index, language_index, feature_index) IHarfbuzz->hb_ot_layout_language_get_required_feature_index((face), (table_tag), (script_index), (language_index), (feature_index))
#define hb_ot_layout_language_get_required_feature(face, table_tag, script_index, language_index, feature_index, feature_tag) IHarfbuzz->hb_ot_layout_language_get_required_feature((face), (table_tag), (script_index), (language_index), (feature_index), (feature_tag))
#define hb_ot_layout_language_get_feature_indexes(face, table_tag, script_index, language_index, start_offset, feature_count, feature_indexes) IHarfbuzz->hb_ot_layout_language_get_feature_indexes((face), (table_tag), (script_index), (language_index), (start_offset), (feature_count), (feature_indexes))
#define hb_ot_layout_language_get_feature_tags(face, table_tag, script_index, language_index, start_offset, feature_count, feature_tags) IHarfbuzz->hb_ot_layout_language_get_feature_tags((face), (table_tag), (script_index), (language_index), (start_offset), (feature_count), (feature_tags))
#define hb_ot_layout_language_find_feature(face, table_tag, script_index, language_index, feature_tag, feature_index) IHarfbuzz->hb_ot_layout_language_find_feature((face), (table_tag), (script_index), (language_index), (feature_tag), (feature_index))
#define hb_ot_layout_feature_get_lookups(face, table_tag, feature_index, start_offset, lookup_count, lookup_indexes) IHarfbuzz->hb_ot_layout_feature_get_lookups((face), (table_tag), (feature_index), (start_offset), (lookup_count), (lookup_indexes))
#define hb_ot_layout_table_get_lookup_count(face, table_tag) IHarfbuzz->hb_ot_layout_table_get_lookup_count((face), (table_tag))
#define hb_ot_layout_collect_features(face, table_tag, scripts, languages, features, feature_indexes) IHarfbuzz->hb_ot_layout_collect_features((face), (table_tag), (scripts), (languages), (features), (feature_indexes))
#define hb_ot_layout_collect_features_map(face, table_tag, script_index, language_index, feature_map) IHarfbuzz->hb_ot_layout_collect_features_map((face), (table_tag), (script_index), (language_index), (feature_map))
#define hb_ot_layout_collect_lookups(face, table_tag, scripts, languages, features, lookup_indexes) IHarfbuzz->hb_ot_layout_collect_lookups((face), (table_tag), (scripts), (languages), (features), (lookup_indexes))
#define hb_ot_layout_lookup_collect_glyphs(face, table_tag, lookup_index, glyphs_before, glyphs_input, glyphs_after, glyphs_output) IHarfbuzz->hb_ot_layout_lookup_collect_glyphs((face), (table_tag), (lookup_index), (glyphs_before), (glyphs_input), (glyphs_after), (glyphs_output))
#define hb_ot_layout_table_find_feature_variations(face, table_tag, coords, num_coords, variations_index) IHarfbuzz->hb_ot_layout_table_find_feature_variations((face), (table_tag), (coords), (num_coords), (variations_index))
#define hb_ot_layout_feature_with_variations_get_lookups(face, table_tag, feature_index, variations_index, start_offset, lookup_count, lookup_indexes) IHarfbuzz->hb_ot_layout_feature_with_variations_get_lookups((face), (table_tag), (feature_index), (variations_index), (start_offset), (lookup_count), (lookup_indexes))
#define hb_ot_layout_has_substitution(face) IHarfbuzz->hb_ot_layout_has_substitution((face))
#define hb_ot_layout_lookup_get_glyph_alternates(face, lookup_index, glyph, start_offset, alternate_count, alternate_glyphs) IHarfbuzz->hb_ot_layout_lookup_get_glyph_alternates((face), (lookup_index), (glyph), (start_offset), (alternate_count), (alternate_glyphs))
#define hb_ot_layout_lookup_would_substitute(face, lookup_index, glyphs, glyphs_length, zero_context) IHarfbuzz->hb_ot_layout_lookup_would_substitute((face), (lookup_index), (glyphs), (glyphs_length), (zero_context))
#define hb_ot_layout_lookup_substitute_closure(face, lookup_index, glyphs) IHarfbuzz->hb_ot_layout_lookup_substitute_closure((face), (lookup_index), (glyphs))
#define hb_ot_layout_lookups_substitute_closure(face, lookups, glyphs) IHarfbuzz->hb_ot_layout_lookups_substitute_closure((face), (lookups), (glyphs))
#define hb_ot_layout_has_positioning(face) IHarfbuzz->hb_ot_layout_has_positioning((face))
#define hb_ot_layout_get_size_params(face, design_size, subfamily_id, subfamily_name_id, range_start, range_end) IHarfbuzz->hb_ot_layout_get_size_params((face), (design_size), (subfamily_id), (subfamily_name_id), (range_start), (range_end))
#define hb_ot_layout_lookup_get_optical_bound(font, lookup_index, direction, glyph) IHarfbuzz->hb_ot_layout_lookup_get_optical_bound((font), (lookup_index), (direction), (glyph))
#define hb_ot_layout_feature_get_name_ids(face, table_tag, feature_index, label_id, tooltip_id, sample_id, num_named_parameters, first_param_id) IHarfbuzz->hb_ot_layout_feature_get_name_ids((face), (table_tag), (feature_index), (label_id), (tooltip_id), (sample_id), (num_named_parameters), (first_param_id))
#define hb_ot_layout_feature_get_characters(face, table_tag, feature_index, start_offset, char_count, characters) IHarfbuzz->hb_ot_layout_feature_get_characters((face), (table_tag), (feature_index), (start_offset), (char_count), (characters))
#define hb_ot_layout_get_font_extents(font, direction, script_tag, language_tag, extents) IHarfbuzz->hb_ot_layout_get_font_extents((font), (direction), (script_tag), (language_tag), (extents))
#define hb_ot_layout_get_font_extents2(font, direction, script, language, extents) IHarfbuzz->hb_ot_layout_get_font_extents2((font), (direction), (script), (language), (extents))
#define hb_ot_layout_get_horizontal_baseline_tag_for_script(script) IHarfbuzz->hb_ot_layout_get_horizontal_baseline_tag_for_script((script))
#define hb_ot_layout_get_baseline(font, baseline_tag, direction, script_tag, language_tag, coord) IHarfbuzz->hb_ot_layout_get_baseline((font), (baseline_tag), (direction), (script_tag), (language_tag), (coord))
#define hb_ot_layout_get_baseline2(font, baseline_tag, direction, script, language, coord) IHarfbuzz->hb_ot_layout_get_baseline2((font), (baseline_tag), (direction), (script), (language), (coord))
#define hb_ot_layout_get_baseline_with_fallback(font, baseline_tag, direction, script_tag, language_tag, coord) IHarfbuzz->hb_ot_layout_get_baseline_with_fallback((font), (baseline_tag), (direction), (script_tag), (language_tag), (coord))
#define hb_ot_layout_get_baseline_with_fallback2(font, baseline_tag, direction, script, language, coord) IHarfbuzz->hb_ot_layout_get_baseline_with_fallback2((font), (baseline_tag), (direction), (script), (language), (coord))
#define hb_ot_math_has_data(face) IHarfbuzz->hb_ot_math_has_data((face))
#define hb_ot_math_get_constant(font, constant) IHarfbuzz->hb_ot_math_get_constant((font), (constant))
#define hb_ot_math_get_glyph_italics_correction(font, glyph) IHarfbuzz->hb_ot_math_get_glyph_italics_correction((font), (glyph))
#define hb_ot_math_get_glyph_top_accent_attachment(font, glyph) IHarfbuzz->hb_ot_math_get_glyph_top_accent_attachment((font), (glyph))
#define hb_ot_math_is_glyph_extended_shape(face, glyph) IHarfbuzz->hb_ot_math_is_glyph_extended_shape((face), (glyph))
#define hb_ot_math_get_glyph_kerning(font, glyph, kern, correction_height) IHarfbuzz->hb_ot_math_get_glyph_kerning((font), (glyph), (kern), (correction_height))
#define hb_ot_math_get_glyph_kernings(font, glyph, kern, start_offset, entries_count, kern_entries) IHarfbuzz->hb_ot_math_get_glyph_kernings((font), (glyph), (kern), (start_offset), (entries_count), (kern_entries))
#define hb_ot_math_get_glyph_variants(font, glyph, direction, start_offset, variants_count, variants) IHarfbuzz->hb_ot_math_get_glyph_variants((font), (glyph), (direction), (start_offset), (variants_count), (variants))
#define hb_ot_math_get_min_connector_overlap(font, direction) IHarfbuzz->hb_ot_math_get_min_connector_overlap((font), (direction))
#define hb_ot_math_get_glyph_assembly(font, glyph, direction, start_offset, parts_count, parts, italics_correction) IHarfbuzz->hb_ot_math_get_glyph_assembly((font), (glyph), (direction), (start_offset), (parts_count), (parts), (italics_correction))
#define hb_ot_meta_get_entry_tags(face, start_offset, entries_count, entries) IHarfbuzz->hb_ot_meta_get_entry_tags((face), (start_offset), (entries_count), (entries))
#define hb_ot_meta_reference_entry(face, meta_tag) IHarfbuzz->hb_ot_meta_reference_entry((face), (meta_tag))
#define hb_ot_metrics_get_position(font, metrics_tag, position) IHarfbuzz->hb_ot_metrics_get_position((font), (metrics_tag), (position))
#define hb_ot_metrics_get_position_with_fallback(font, metrics_tag, position) IHarfbuzz->hb_ot_metrics_get_position_with_fallback((font), (metrics_tag), (position))
#define hb_ot_metrics_get_variation(font, metrics_tag) IHarfbuzz->hb_ot_metrics_get_variation((font), (metrics_tag))
#define hb_ot_metrics_get_x_variation(font, metrics_tag) IHarfbuzz->hb_ot_metrics_get_x_variation((font), (metrics_tag))
#define hb_ot_metrics_get_y_variation(font, metrics_tag) IHarfbuzz->hb_ot_metrics_get_y_variation((font), (metrics_tag))
#define hb_ot_name_list_names(face, num_entries) IHarfbuzz->hb_ot_name_list_names((face), (num_entries))
#define hb_ot_name_get_utf8(face, name_id, language, text_size, text) IHarfbuzz->hb_ot_name_get_utf8((face), (name_id), (language), (text_size), (text))
#define hb_ot_name_get_utf16(face, name_id, language, text_size, text) IHarfbuzz->hb_ot_name_get_utf16((face), (name_id), (language), (text_size), (text))
#define hb_ot_name_get_utf32(face, name_id, language, text_size, text) IHarfbuzz->hb_ot_name_get_utf32((face), (name_id), (language), (text_size), (text))
#define hb_ot_shape_glyphs_closure(font, buffer, features, num_features, glyphs) IHarfbuzz->hb_ot_shape_glyphs_closure((font), (buffer), (features), (num_features), (glyphs))
#define hb_ot_shape_plan_collect_lookups(shape_plan, table_tag, lookup_indexes) IHarfbuzz->hb_ot_shape_plan_collect_lookups((shape_plan), (table_tag), (lookup_indexes))
#define hb_ot_var_has_data(face) IHarfbuzz->hb_ot_var_has_data((face))
#define hb_ot_var_get_axis_count(face) IHarfbuzz->hb_ot_var_get_axis_count((face))
#define hb_ot_var_get_axis_infos(face, start_offset, axes_count, axes_array) IHarfbuzz->hb_ot_var_get_axis_infos((face), (start_offset), (axes_count), (axes_array))
#define hb_ot_var_find_axis_info(face, axis_tag, axis_info) IHarfbuzz->hb_ot_var_find_axis_info((face), (axis_tag), (axis_info))
#define hb_ot_var_get_named_instance_count(face) IHarfbuzz->hb_ot_var_get_named_instance_count((face))
#define hb_ot_var_named_instance_get_subfamily_name_id(face, instance_index) IHarfbuzz->hb_ot_var_named_instance_get_subfamily_name_id((face), (instance_index))
#define hb_ot_var_named_instance_get_postscript_name_id(face, instance_index) IHarfbuzz->hb_ot_var_named_instance_get_postscript_name_id((face), (instance_index))
#define hb_ot_var_named_instance_get_design_coords(face, instance_index, coords_length, coords) IHarfbuzz->hb_ot_var_named_instance_get_design_coords((face), (instance_index), (coords_length), (coords))
#define hb_ot_var_normalize_variations(face, variations, variations_length, coords, coords_length) IHarfbuzz->hb_ot_var_normalize_variations((face), (variations), (variations_length), (coords), (coords_length))
#define hb_ot_var_normalize_coords(face, coords_length, design_coords, normalized_coords) IHarfbuzz->hb_ot_var_normalize_coords((face), (coords_length), (design_coords), (normalized_coords))
#define hb_paint_funcs_create() IHarfbuzz->hb_paint_funcs_create()
#define hb_paint_funcs_get_empty() IHarfbuzz->hb_paint_funcs_get_empty()
#define hb_paint_funcs_reference(funcs) IHarfbuzz->hb_paint_funcs_reference((funcs))
#define hb_paint_funcs_destroy(funcs) IHarfbuzz->hb_paint_funcs_destroy((funcs))
#define hb_paint_funcs_set_user_data(funcs, key, data, destroy, replace) IHarfbuzz->hb_paint_funcs_set_user_data((funcs), (key), (data), (destroy), (replace))
#define hb_paint_funcs_get_user_data(funcs, key) IHarfbuzz->hb_paint_funcs_get_user_data((funcs), (key))
#define hb_paint_funcs_make_immutable(funcs) IHarfbuzz->hb_paint_funcs_make_immutable((funcs))
#define hb_paint_funcs_is_immutable(funcs) IHarfbuzz->hb_paint_funcs_is_immutable((funcs))
#define hb_color_line_get_color_stops(color_line, start, count, color_stops) IHarfbuzz->hb_color_line_get_color_stops((color_line), (start), (count), (color_stops))
#define hb_color_line_get_extend(color_line) IHarfbuzz->hb_color_line_get_extend((color_line))
#define hb_paint_funcs_set_push_transform_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_push_transform_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_pop_transform_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_pop_transform_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_color_glyph_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_color_glyph_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_push_clip_glyph_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_push_clip_glyph_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_push_clip_rectangle_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_push_clip_rectangle_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_pop_clip_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_pop_clip_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_color_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_color_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_image_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_image_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_linear_gradient_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_linear_gradient_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_radial_gradient_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_radial_gradient_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_sweep_gradient_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_sweep_gradient_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_push_group_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_push_group_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_pop_group_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_pop_group_func((funcs), (func), (user_data), (destroy))
#define hb_paint_funcs_set_custom_palette_color_func(funcs, func, user_data, destroy) IHarfbuzz->hb_paint_funcs_set_custom_palette_color_func((funcs), (func), (user_data), (destroy))
#define hb_paint_push_transform(funcs, paint_data, xx, yx, xy, yy, dx, dy) IHarfbuzz->hb_paint_push_transform((funcs), (paint_data), (xx), (yx), (xy), (yy), (dx), (dy))
#define hb_paint_pop_transform(funcs, paint_data) IHarfbuzz->hb_paint_pop_transform((funcs), (paint_data))
#define hb_paint_color_glyph(funcs, paint_data, glyph, font) IHarfbuzz->hb_paint_color_glyph((funcs), (paint_data), (glyph), (font))
#define hb_paint_push_clip_glyph(funcs, paint_data, glyph, font) IHarfbuzz->hb_paint_push_clip_glyph((funcs), (paint_data), (glyph), (font))
#define hb_paint_push_clip_rectangle(funcs, paint_data, xmin, ymin, xmax, ymax) IHarfbuzz->hb_paint_push_clip_rectangle((funcs), (paint_data), (xmin), (ymin), (xmax), (ymax))
#define hb_paint_pop_clip(funcs, paint_data) IHarfbuzz->hb_paint_pop_clip((funcs), (paint_data))
#define hb_paint_color(funcs, paint_data, is_foreground, color) IHarfbuzz->hb_paint_color((funcs), (paint_data), (is_foreground), (color))
#define hb_paint_image(funcs, paint_data, image, width, height, format, slant, extents) IHarfbuzz->hb_paint_image((funcs), (paint_data), (image), (width), (height), (format), (slant), (extents))
#define hb_paint_linear_gradient(funcs, paint_data, color_line, x0, y0, x1, y1, x2, y2) IHarfbuzz->hb_paint_linear_gradient((funcs), (paint_data), (color_line), (x0), (y0), (x1), (y1), (x2), (y2))
#define hb_paint_radial_gradient(funcs, paint_data, color_line, x0, y0, r0, x1, y1, r1) IHarfbuzz->hb_paint_radial_gradient((funcs), (paint_data), (color_line), (x0), (y0), (r0), (x1), (y1), (r1))
#define hb_paint_sweep_gradient(funcs, paint_data, color_line, x0, y0, start_angle, end_angle) IHarfbuzz->hb_paint_sweep_gradient((funcs), (paint_data), (color_line), (x0), (y0), (start_angle), (end_angle))
#define hb_paint_push_group(funcs, paint_data) IHarfbuzz->hb_paint_push_group((funcs), (paint_data))
#define hb_paint_pop_group(funcs, paint_data, mode) IHarfbuzz->hb_paint_pop_group((funcs), (paint_data), (mode))
#define hb_paint_custom_palette_color(funcs, paint_data, color_index, color) IHarfbuzz->hb_paint_custom_palette_color((funcs), (paint_data), (color_index), (color))
#define hb_set_create() IHarfbuzz->hb_set_create()
#define hb_set_get_empty() IHarfbuzz->hb_set_get_empty()
#define hb_set_reference(set) IHarfbuzz->hb_set_reference((set))
#define hb_set_destroy(set) IHarfbuzz->hb_set_destroy((set))
#define hb_set_set_user_data(set, key, data, destroy, replace) IHarfbuzz->hb_set_set_user_data((set), (key), (data), (destroy), (replace))
#define hb_set_get_user_data(set, key) IHarfbuzz->hb_set_get_user_data((set), (key))
#define hb_set_allocation_successful(set) IHarfbuzz->hb_set_allocation_successful((set))
#define hb_set_copy(set) IHarfbuzz->hb_set_copy((set))
#define hb_set_clear(set) IHarfbuzz->hb_set_clear((set))
#define hb_set_is_empty(set) IHarfbuzz->hb_set_is_empty((set))
#define hb_set_invert(set) IHarfbuzz->hb_set_invert((set))
#define hb_set_is_inverted(set) IHarfbuzz->hb_set_is_inverted((set))
#define hb_set_has(set, codepoint) IHarfbuzz->hb_set_has((set), (codepoint))
#define hb_set_add(set, codepoint) IHarfbuzz->hb_set_add((set), (codepoint))
#define hb_set_add_range(set, first, last) IHarfbuzz->hb_set_add_range((set), (first), (last))
#define hb_set_add_sorted_array(set, sorted_codepoints, num_codepoints) IHarfbuzz->hb_set_add_sorted_array((set), (sorted_codepoints), (num_codepoints))
#define hb_set_del(set, codepoint) IHarfbuzz->hb_set_del((set), (codepoint))
#define hb_set_del_range(set, first, last) IHarfbuzz->hb_set_del_range((set), (first), (last))
#define hb_set_is_equal(set, other) IHarfbuzz->hb_set_is_equal((set), (other))
#define hb_set_hash(set) IHarfbuzz->hb_set_hash((set))
#define hb_set_is_subset(set, larger_set) IHarfbuzz->hb_set_is_subset((set), (larger_set))
#define hb_set_set(set, other) IHarfbuzz->hb_set_set((set), (other))
#define hb_set_union(set, other) IHarfbuzz->hb_set_union((set), (other))
#define hb_set_intersect(set, other) IHarfbuzz->hb_set_intersect((set), (other))
#define hb_set_subtract(set, other) IHarfbuzz->hb_set_subtract((set), (other))
#define hb_set_symmetric_difference(set, other) IHarfbuzz->hb_set_symmetric_difference((set), (other))
#define hb_set_get_population(set) IHarfbuzz->hb_set_get_population((set))
#define hb_set_get_min(set) IHarfbuzz->hb_set_get_min((set))
#define hb_set_get_max(set) IHarfbuzz->hb_set_get_max((set))
#define hb_set_next(set, codepoint) IHarfbuzz->hb_set_next((set), (codepoint))
#define hb_set_previous(set, codepoint) IHarfbuzz->hb_set_previous((set), (codepoint))
#define hb_set_next_range(set, first, last) IHarfbuzz->hb_set_next_range((set), (first), (last))
#define hb_set_previous_range(set, first, last) IHarfbuzz->hb_set_previous_range((set), (first), (last))
#define hb_set_next_many(set, codepoint, out, size) IHarfbuzz->hb_set_next_many((set), (codepoint), (out), (size))
#define hb_shape_plan_create(face, props, user_features, num_user_features, shaper_list) IHarfbuzz->hb_shape_plan_create((face), (props), (user_features), (num_user_features), (shaper_list))
#define hb_shape_plan_create_cached(face, props, user_features, num_user_features, shaper_list) IHarfbuzz->hb_shape_plan_create_cached((face), (props), (user_features), (num_user_features), (shaper_list))
#define hb_shape_plan_create2(face, props, user_features, num_user_features, coords, num_coords, shaper_list) IHarfbuzz->hb_shape_plan_create2((face), (props), (user_features), (num_user_features), (coords), (num_coords), (shaper_list))
#define hb_shape_plan_create_cached2(face, props, user_features, num_user_features, coords, num_coords, shaper_list) IHarfbuzz->hb_shape_plan_create_cached2((face), (props), (user_features), (num_user_features), (coords), (num_coords), (shaper_list))
#define hb_shape_plan_get_empty() IHarfbuzz->hb_shape_plan_get_empty()
#define hb_shape_plan_reference(shape_plan) IHarfbuzz->hb_shape_plan_reference((shape_plan))
#define hb_shape_plan_destroy(shape_plan) IHarfbuzz->hb_shape_plan_destroy((shape_plan))
#define hb_shape_plan_set_user_data(shape_plan, key, data, destroy, replace) IHarfbuzz->hb_shape_plan_set_user_data((shape_plan), (key), (data), (destroy), (replace))
#define hb_shape_plan_get_user_data(shape_plan, key) IHarfbuzz->hb_shape_plan_get_user_data((shape_plan), (key))
#define hb_shape_plan_execute(shape_plan, font, buffer, features, num_features) IHarfbuzz->hb_shape_plan_execute((shape_plan), (font), (buffer), (features), (num_features))
#define hb_shape_plan_get_shaper(shape_plan) IHarfbuzz->hb_shape_plan_get_shaper((shape_plan))
#define hb_shape(font, buffer, features, num_features) IHarfbuzz->hb_shape((font), (buffer), (features), (num_features))
#define hb_shape_full(font, buffer, features, num_features, shaper_list) IHarfbuzz->hb_shape_full((font), (buffer), (features), (num_features), (shaper_list))
#define hb_shape_justify(font, buffer, features, num_features, shaper_list, min_target_advance, max_target_advance, advance, var_tag, var_value) IHarfbuzz->hb_shape_justify((font), (buffer), (features), (num_features), (shaper_list), (min_target_advance), (max_target_advance), (advance), (var_tag), (var_value))
#define hb_shape_list_shapers() IHarfbuzz->hb_shape_list_shapers()
#define hb_style_get_value(font, style_tag) IHarfbuzz->hb_style_get_value((font), (style_tag))
#define hb_subset_repack_or_fail(table_tag, hb_objects, num_hb_objs) IHarfbuzz->hb_subset_repack_or_fail((table_tag), (hb_objects), (num_hb_objs))
#define hb_subset_input_create_or_fail() IHarfbuzz->hb_subset_input_create_or_fail()
#define hb_subset_input_reference(input) IHarfbuzz->hb_subset_input_reference((input))
#define hb_subset_input_destroy(input) IHarfbuzz->hb_subset_input_destroy((input))
#define hb_subset_input_set_user_data(input, key, data, destroy, replace) IHarfbuzz->hb_subset_input_set_user_data((input), (key), (data), (destroy), (replace))
#define hb_subset_input_get_user_data(input, key) IHarfbuzz->hb_subset_input_get_user_data((input), (key))
#define hb_subset_input_keep_everything(input) IHarfbuzz->hb_subset_input_keep_everything((input))
#define hb_subset_input_unicode_set(input) IHarfbuzz->hb_subset_input_unicode_set((input))
#define hb_subset_input_glyph_set(input) IHarfbuzz->hb_subset_input_glyph_set((input))
#define hb_subset_input_set(input, set_type) IHarfbuzz->hb_subset_input_set((input), (set_type))
#define hb_subset_input_old_to_new_glyph_mapping(input) IHarfbuzz->hb_subset_input_old_to_new_glyph_mapping((input))
#define hb_subset_input_get_flags(input) IHarfbuzz->hb_subset_input_get_flags((input))
#define hb_subset_input_set_flags(input, value) IHarfbuzz->hb_subset_input_set_flags((input), (value))
#define hb_subset_input_pin_all_axes_to_default(input, face) IHarfbuzz->hb_subset_input_pin_all_axes_to_default((input), (face))
#define hb_subset_input_pin_axis_to_default(input, face, axis_tag) IHarfbuzz->hb_subset_input_pin_axis_to_default((input), (face), (axis_tag))
#define hb_subset_input_pin_axis_location(input, face, axis_tag, axis_value) IHarfbuzz->hb_subset_input_pin_axis_location((input), (face), (axis_tag), (axis_value))
#define hb_subset_input_get_axis_range(input, axis_tag, axis_min_value, axis_max_value, axis_def_value) IHarfbuzz->hb_subset_input_get_axis_range((input), (axis_tag), (axis_min_value), (axis_max_value), (axis_def_value))
#define hb_subset_input_set_axis_range(input, face, axis_tag, axis_min_value, axis_max_value, axis_def_value) IHarfbuzz->hb_subset_input_set_axis_range((input), (face), (axis_tag), (axis_min_value), (axis_max_value), (axis_def_value))
#define hb_subset_input_override_name_table(input, name_id, platform_id, encoding_id, language_id, name_str, str_len) IHarfbuzz->hb_subset_input_override_name_table((input), (name_id), (platform_id), (encoding_id), (language_id), (name_str), (str_len))
#define hb_subset_preprocess(source) IHarfbuzz->hb_subset_preprocess((source))
#define hb_subset_or_fail(source, input) IHarfbuzz->hb_subset_or_fail((source), (input))
#define hb_subset_plan_execute_or_fail(plan) IHarfbuzz->hb_subset_plan_execute_or_fail((plan))
#define hb_subset_plan_create_or_fail(face, input) IHarfbuzz->hb_subset_plan_create_or_fail((face), (input))
#define hb_subset_plan_destroy(plan) IHarfbuzz->hb_subset_plan_destroy((plan))
#define hb_subset_plan_old_to_new_glyph_mapping(plan) IHarfbuzz->hb_subset_plan_old_to_new_glyph_mapping((plan))
#define hb_subset_plan_new_to_old_glyph_mapping(plan) IHarfbuzz->hb_subset_plan_new_to_old_glyph_mapping((plan))
#define hb_subset_plan_unicode_to_old_glyph_mapping(plan) IHarfbuzz->hb_subset_plan_unicode_to_old_glyph_mapping((plan))
#define hb_subset_plan_reference(plan) IHarfbuzz->hb_subset_plan_reference((plan))
#define hb_subset_plan_set_user_data(plan, key, data, destroy, replace) IHarfbuzz->hb_subset_plan_set_user_data((plan), (key), (data), (destroy), (replace))
#define hb_subset_plan_get_user_data(plan, key) IHarfbuzz->hb_subset_plan_get_user_data((plan), (key))
#define hb_unicode_funcs_get_default() IHarfbuzz->hb_unicode_funcs_get_default()
#define hb_unicode_funcs_create(parent) IHarfbuzz->hb_unicode_funcs_create((parent))
#define hb_unicode_funcs_get_empty() IHarfbuzz->hb_unicode_funcs_get_empty()
#define hb_unicode_funcs_reference(ufuncs) IHarfbuzz->hb_unicode_funcs_reference((ufuncs))
#define hb_unicode_funcs_destroy(ufuncs) IHarfbuzz->hb_unicode_funcs_destroy((ufuncs))
#define hb_unicode_funcs_set_user_data(ufuncs, key, data, destroy, replace) IHarfbuzz->hb_unicode_funcs_set_user_data((ufuncs), (key), (data), (destroy), (replace))
#define hb_unicode_funcs_get_user_data(ufuncs, key) IHarfbuzz->hb_unicode_funcs_get_user_data((ufuncs), (key))
#define hb_unicode_funcs_make_immutable(ufuncs) IHarfbuzz->hb_unicode_funcs_make_immutable((ufuncs))
#define hb_unicode_funcs_is_immutable(ufuncs) IHarfbuzz->hb_unicode_funcs_is_immutable((ufuncs))
#define hb_unicode_funcs_get_parent(ufuncs) IHarfbuzz->hb_unicode_funcs_get_parent((ufuncs))
#define hb_unicode_funcs_set_combining_class_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_combining_class_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_funcs_set_general_category_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_general_category_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_funcs_set_mirroring_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_mirroring_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_funcs_set_script_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_script_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_funcs_set_compose_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_compose_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_funcs_set_decompose_func(ufuncs, func, user_data, destroy) IHarfbuzz->hb_unicode_funcs_set_decompose_func((ufuncs), (func), (user_data), (destroy))
#define hb_unicode_combining_class(ufuncs, unicode) IHarfbuzz->hb_unicode_combining_class((ufuncs), (unicode))
#define hb_unicode_general_category(ufuncs, unicode) IHarfbuzz->hb_unicode_general_category((ufuncs), (unicode))
#define hb_unicode_mirroring(ufuncs, unicode) IHarfbuzz->hb_unicode_mirroring((ufuncs), (unicode))
#define hb_unicode_script(ufuncs, unicode) IHarfbuzz->hb_unicode_script((ufuncs), (unicode))
#define hb_unicode_compose(ufuncs, a, b, ab) IHarfbuzz->hb_unicode_compose((ufuncs), (a), (b), (ab))
#define hb_unicode_decompose(ufuncs, ab, a, b) IHarfbuzz->hb_unicode_decompose((ufuncs), (ab), (a), (b))
#define hb_version(major, minor, micro) IHarfbuzz->hb_version((major), (minor), (micro))
#define hb_version_string() IHarfbuzz->hb_version_string()
#define hb_version_atleast(major, minor, micro) IHarfbuzz->hb_version_atleast((major), (minor), (micro))

#endif /* INLINE4_HARFBUZZ_H */
